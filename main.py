from tkinter import Tk,ttk,Button,Entry,BOTTOM,Label,LabelFrame,INSERT,Text,PhotoImage,Toplevel,Frame,W,NORMAL,DISABLED,TOP,RIDGE,filedialog,messagebox,StringVar,Scrollbar,LEFT,RIGHT,Y
#import mysql.connector
from PIL import ImageTk,Image
import openpyxl
#from PyPDF2 import PdfFileReader
#from fpdf import FPDF
window=Tk()
window.withdraw()
window.title("Report card")
window.resizable(0,0) 
window.iconbitmap('icon.ico')
#to open tkinter window in the middle of screen
screen_wi = window.winfo_screenwidth()
screen_he = window.winfo_screenheight()
x1 = (screen_wi/2) - 330
y1 = ((screen_he-60)/2) - 300
window.geometry('%dx%d+%d+%d' % (660,600, x1, y1))
i1=ImageTk.PhotoImage(Image.open("logo.png"))
l=Label(image=i1)
l.pack(side=TOP)
def forget():
    global k,b,tp
    k.destroy()
    tp.delete(*tp.get_children())
    b['state']=NORMAL
def find(e):
    global k,tp,b,mydb,cursor
    cursor.execute("select * from report_card where '"+e.get()+"' in (adm_no,roll_no,name,class_,sec,subject,pt1,pt2,pt3,pb1,cb,total,per)")
    rows=cursor.fetchall()
    total=cursor.rowcount
    mydb.commit()
    k=Label(top,text="total enteries are "+ str(total) +"")
    k.pack()
    for i in rows:
        tp.insert('','end',values=i)
    b['state']=DISABLED
def close_second():
    top.destroy()
    window.deiconify()
def complete():
    if e1.get()=='lovish khari' and e2.get()=='1234':
        close_second()
    else:
        messagebox.showinfo("SIGN IN","WRONG PASSWORD")
def center_window(width, height):
    screen_width = top.winfo_screenwidth()
    screen_height = top.winfo_screenheight()
    x = (screen_width/2) - (width/2)
    y = ((screen_height-60)/2) - (height/2)
    top.geometry('%dx%d+%d+%d' % (width,height,x, y))
    top.iconbitmap(r'icon.ico')
    #top.resizable(0,0)

#login window 
top=Toplevel()
center_window(400,360)
photo=PhotoImage(file=r"sps.png")
photoimage=photo.subsample(2,2)
Label(top,image=photoimage).place(x=0,y=0)
Label(top,text="SIGN IN",font=("Arial bold",15)).place(x=100,y=0)
Label(top,text="USER    ",font=("Arial bold",10)).place(x=0,y=50)
Label(top,text="PASSWORD",font=("Arial bold",10)).place(x=0,y=100)
e1=Entry(top,font=10,width=15)
e1.place(x=100,y=50)
e2=Entry(top,font=10,width=15,show="*")
e2.place(x=100,y=100)
Button(top,text="DONE",command=complete).place(x=150,y=250)
top.protocol("WM_DELETE_WINDOW",window.destroy) 
def done(ad,ro,n,c,s,sub,pt1,pt2,pt3,pb1,cb,t,p):
    global mydb,cursor
    try:
        query="""insert into report_card(adm_no,roll_no,name,class_,sec,subject,pt1,pt2,pt3,pb1,cb,total,per)values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
        values=(ad.get(),ro.get(),n.get(),c.get(),s.get(),sub.get(),pt1.get(),pt2.get(),pt3.get(),pb1.get(),cb.get(),t.get(),p.get())
        cursor.execute(query,values)
        mydb.commit()
        messagebox.showinfo("entry","data is saved")
        top.lift(window)
    except Exception as e :
        print(e)
        messagebox.showinfo("entry","###ERROR###")
        top.lift(window)
def import_():
    global mydb,cursor
    try:
        window.filename=filedialog.askopenfilename(title="Select a excel file",filetypes=(("excel files","*.xlsx"),("all files","*.*")))
        wb = openpyxl.load_workbook(window.filename)
        sheet=wb.worksheets[0]
        r,c=sheet.max_row,sheet.max_column
        query="""insert into report_card(adm_no,roll_no,name,class_,sec,subject,pt1,pt2,pt3,pb1,cb,total,per)values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
        for i in sheet.iter_rows(2,max_row=r,min_col=1,max_col=c,values_only=True):
            v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13=i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12]
            values=(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13)
            cursor.execute(query,values)
        mydb.commit()
        messagebox.showinfo("IMPORT DATA","DATA IMPORTED SUCCESSFULLY")
    except:
        messagebox.showinfo("IMPORT DATA","NO DATA IMPORTED")
def new(ad,ro,n,c,s,sub,pt1,pt2,pt3,pb1,cb,t,p):
    ad.delete(0,'end')
    ro.delete(0,'end')
    n.delete(0,'end')
    c.delete(0,'end')
    s.delete(0,'end')
    sub.delete(0,'end')
    pt1.delete(0,'end')
    pt2.delete(0,'end')
    pt3.delete(0,'end')
    pb1.delete(0,'end')
    cb.delete(0,'end')
    t.delete(0,'end')
    p.delete(0,'end')
def add():
    global top
    s1=StringVar()
    s2=StringVar()
    s3=StringVar()
    top=Toplevel()
    center_window(370, 500)
    top.lift(window)
    top.title('ADD NEW ENTRIES')
    Label(top,text="ADD NEW ENTRIES",font=("Arial bold",15)).grid(row=0,column=1)
    Label(top,text="ADMISSION NO",font=("Arial bold",10)).grid(row=2,pady=5,sticky=W)
    Label(top,text="ROLL NO",font=("Arial bold",10)).grid(row=3,pady=5,sticky=W)
    Label(top,text="NAME",font=("Arial bold",10)).grid(row=4,pady=5,sticky=W)
    Label(top,text="CLASS",font=("Arial bold",10)).grid(row=5,pady=5,sticky=W)
    Label(top,text="SEC",font=("Arial bold",10)).grid(row=6,pady=5,sticky=W)
    Label(top,text="SUBJECT",font=("Arial bold",10)).grid(row=7,pady=5,sticky=W)
    Label(top,text="PT1",font=("Arial bold",10)).grid(row=8,pady=5,sticky=W)
    Label(top,text="PT2",font=("Arial bold",10)).grid(row=9,pady=5,sticky=W)
    Label(top,text="PT3",font=("Arial bold",10)).grid(row=10,pady=5,sticky=W)
    Label(top,text="PREBOARD1",font=("Arial bold",10)).grid(row=11,pady=5,sticky=W)
    Label(top,text="COMMON PREBOARD",font=("Arial bold",10)).grid(row=12,pady=5,sticky=W)
    Label(top,text="TOTAL",font=("Arial bold",10)).grid(row=13,pady=5,sticky=W)
    Label(top,text="PERCENTAGE",font=("Arial bold",10)).grid(row=14,pady=5,sticky=W)
    ad=Entry(top,font=10,width=15)
    ad.grid(row=2,column=1)
    ro=Entry(top,font=10,width=15)
    ro.grid(row=3,column=1)
    n=Entry(top,textvariable=s1,font=10,width=15)
    n.grid(row=4,column=1)
    c=Entry(top,font=10,width=15)
    c.grid(row=5,column=1)
    s=Entry(top,textvariable=s2,font=10,width=15)
    s.grid(row=6,column=1)
    sub=Entry(top,textvariable=s3,font=10,width=15)
    sub.grid(row=7,column=1)
    pt1=Entry(top,font=10,width=15)
    pt1.grid(row=8,column=1)
    pt2=Entry(top,font=10,width=15)
    pt2.grid(row=9,column=1)
    pt3=Entry(top,font=10,width=15)
    pt3.grid(row=10,column=1)
    pb1=Entry(top,font=10,width=15)
    pb1.grid(row=11,column=1)
    cb=Entry(top,font=10,width=15)
    cb.grid(row=12,column=1)
    t=Entry(top,font=10,width=15)
    t.grid(row=13,column=1)
    p=Entry(top,font=10,width=15)
    p.grid(row=14,column=1)
    Button(top,text="CLEAR",command=lambda:new(ad,ro,n,c,s,sub,pt1,pt2,pt3,pb1,cb,t,p)).place(x=100,y=470)
    Button(top,text="DONE",command=lambda:done(ad,ro,n,c,s,sub,pt1,pt2,pt3,pb1,cb,t,p)).place(x=150,y=470)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(top,text="<--BACK",bg='red',command=close_second).place(x=5,y=5)
def edit3(ad,ro,n,c,s):
    global mydb,cursor
    try:
        query="update report_card set adm_no=%s,roll_no=%s,name=%s,class_=%s,sec=%s where adm_no='"+ ad.get()+"'"
        values=(ad.get(),ro.get(),n.get(),c.get(),s.get())
        cursor.execute(query,values)
        mydb.commit()
        messagebox.showinfo("entry","updated successfully")
        top.lift(window)
    except :
        messagebox.showinfo("entry","###ERROR###")
        top.lift(window)
def edit():
    # ad and marks not working put in edit3
    global top,mydb,cursor
    def edit1():
        try:
            cursor.execute("select * from report_card where adm_no='"+ad.get()+"'")
            m=cursor.fetchall()
            yo=len(m)
            mydb.commit()
            Label(frx1,text="ROLL NO",font=("Arial bold",10)).grid(row=3,pady=5,sticky=W)
            Label(frx1,text="NAME",font=("Arial bold",10)).grid(row=4,pady=5,sticky=W)
            Label(frx1,text="CLASS",font=("Arial bold",10)).grid(row=5,pady=5,sticky=W)
            Label(frx1,text="SEC",font=("Arial bold",10)).grid(row=6,pady=5,sticky=W)
            Label(frx3,text="SUBJECT",font=("Arial bold",10)).grid(row=7,pady=5,sticky=W)
            Label(frx3,text="PT1",font=("Arial bold",10)).grid(row=8,pady=5,sticky=W)
            Label(frx3,text="PT2",font=("Arial bold",10)).grid(row=9,pady=5,sticky=W)
            Label(frx3,text="PT3",font=("Arial bold",10)).grid(row=10,pady=5,sticky=W)
            Label(frx3,text="PREBOARD1",font=("Arial bold",10)).grid(row=11,pady=5,sticky=W)
            Label(frx3,text="COMMON PREBOARD",font=("Arial bold",10)).grid(row=12,pady=5,sticky=W)
            Label(frx3,text="TOTAL",font=("Arial bold",10)).grid(row=13,pady=5,sticky=W)
            Label(frx3,text="PERCENTAGE",font=("Arial bold",10)).grid(row=14,pady=5,sticky=W)
            ro=Entry(frx1,textvariable=s1,font=10,width=15)
            ro.grid(row=3,column=1)
            n=Entry(frx1,textvariable=s2,font=10,width=15)
            n.grid(row=4,column=1)
            c=Entry(frx1,textvariable=s3,font=10,width=15)
            c.grid(row=5,column=1)
            s=Entry(frx1,textvariable=s4,font=10,width=15)
            s.grid(row=6,column=1)
            s1.set(m[0][1])
            s2.set(m[0][2])
            s3.set(m[0][3])
            s4.set(m[0][4])
            #first subjects entry
            if yo>=1:
                sub=Entry(frx3,textvariable=s5,font=10,width=10)
                sub.grid(row=7,column=1)
                pt1=Entry(frx3,textvariable=s6,font=10,width=10)
                pt1.grid(row=8,column=1)
                pt2=Entry(frx3,textvariable=s7,font=10,width=10)
                pt2.grid(row=9,column=1)
                pt3=Entry(frx3,textvariable=s8,font=10,width=10)
                pt3.grid(row=10,column=1)
                pb1=Entry(frx3,textvariable=s9,font=10,width=10)
                pb1.grid(row=11,column=1)
                cb=Entry(frx3,textvariable=s10,font=10,width=10)
                cb.grid(row=12,column=1)
                t=Entry(frx3,textvariable=s11,font=10,width=10)
                t.grid(row=13,column=1)
                p=Entry(frx3,textvariable=s12,font=10,width=10)
                p.grid(row=14,column=1)
                s5.set(m[0][5])
                s6.set(m[0][6])
                s7.set(m[0][7])
                s8.set(m[0][8])
                s9.set(m[0][9])
                s10.set(m[0][10])
                s11.set(m[0][11])
                s12.set(m[0][12])
            #2nd sub
            if yo>=2:
                sub_=Entry(frx3,textvariable=s13,font=10,width=10)
                sub_.grid(row=7,column=2)
                pt1_=Entry(frx3,textvariable=s14,font=10,width=10)
                pt1_.grid(row=8,column=2)
                pt2_=Entry(frx3,textvariable=s15,font=10,width=10)
                pt2_.grid(row=9,column=2)
                pt3_=Entry(frx3,textvariable=s16,font=10,width=10)
                pt3_.grid(row=10,column=2)
                pb1_=Entry(frx3,textvariable=s17,font=10,width=10)
                pb1_.grid(row=11,column=2)
                cb_=Entry(frx3,textvariable=s18,font=10,width=10)
                cb_.grid(row=12,column=2)
                t_=Entry(frx3,textvariable=s19,font=10,width=10)
                t_.grid(row=13,column=2)
                p_=Entry(frx3,textvariable=s20,font=10,width=10)
                p_.grid(row=14,column=2)
                s13.set(m[1][5])
                s14.set(m[1][6])
                s15.set(m[1][7])
                s16.set(m[1][8])
                s17.set(m[1][9])
                s18.set(m[1][10])
                s19.set(m[1][11])
                s20.set(m[1][12])
            #3rd
            if yo>=3:
                sub_=Entry(frx3,textvariable=s21,font=10,width=10)
                sub_.grid(row=7,column=3)
                pt1_=Entry(frx3,textvariable=s22,font=10,width=10)
                pt1_.grid(row=8,column=3)
                pt2_=Entry(frx3,textvariable=s23,font=10,width=10)
                pt2_.grid(row=9,column=3)
                pt3_=Entry(frx3,textvariable=s24,font=10,width=10)
                pt3_.grid(row=10,column=3)
                pb1_=Entry(frx3,textvariable=s25,font=10,width=10)
                pb1_.grid(row=11,column=3)
                cb_=Entry(frx3,textvariable=s26,font=10,width=10)
                cb_.grid(row=12,column=3)
                t_=Entry(frx3,textvariable=s27,font=10,width=10)
                t_.grid(row=13,column=3)
                p_=Entry(frx3,textvariable=s28,font=10,width=10)
                p_.grid(row=14,column=3)
                s21.set(m[2][5])
                s22.set(m[2][6])
                s23.set(m[2][7])
                s24.set(m[2][8])
                s25.set(m[2][9])
                s26.set(m[2][10])
                s27.set(m[2][11])
                s28.set(m[2][12])
            # 4rth
            if yo>=4:
                sub_=Entry(frx3,textvariable=s29,font=10,width=10)
                sub_.grid(row=7,column=4)
                pt1_=Entry(frx3,textvariable=s30,font=10,width=10)
                pt1_.grid(row=8,column=4)
                pt2_=Entry(frx3,textvariable=s31,font=10,width=10)
                pt2_.grid(row=9,column=4)
                pt3_=Entry(frx3,textvariable=s32,font=10,width=10)
                pt3_.grid(row=10,column=4)
                pb1_=Entry(frx3,textvariable=s33,font=10,width=10)
                pb1_.grid(row=11,column=4)
                cb_=Entry(frx3,textvariable=s34,font=10,width=10)
                cb_.grid(row=12,column=4)
                t_=Entry(frx3,textvariable=s35,font=10,width=10)
                t_.grid(row=13,column=4)
                p_=Entry(frx3,textvariable=s36,font=10,width=10)
                p_.grid(row=14,column=4)
                s29.set(m[3][5])
                s30.set(m[3][6])
                s31.set(m[3][7])
                s32.set(m[3][8])
                s33.set(m[3][9])
                s34.set(m[3][10])
                s35.set(m[3][11])
                s36.set(m[3][12])
            #5th
            if yo>=5:
                sub_=Entry(frx3,textvariable=s37,font=10,width=10)
                sub_.grid(row=7,column=5)
                pt1_=Entry(frx3,textvariable=s38,font=10,width=10)
                pt1_.grid(row=8,column=5)
                pt2_=Entry(frx3,textvariable=s39,font=10,width=10)
                pt2_.grid(row=9,column=5)
                pt3_=Entry(frx3,textvariable=s40,font=10,width=10)
                pt3_.grid(row=10,column=5)
                pb1_=Entry(frx3,textvariable=s41,font=10,width=10)
                pb1_.grid(row=11,column=5)
                cb_=Entry(frx3,textvariable=s42,font=10,width=10)
                cb_.grid(row=12,column=5)
                t_=Entry(frx3,textvariable=s43,font=10,width=10)
                t_.grid(row=13,column=5)
                p_=Entry(frx3,textvariable=s44,font=10,width=10)
                p_.grid(row=14,column=5)
                s37.set(m[4][5])
                s38.set(m[4][6])
                s39.set(m[4][7])
                s40.set(m[4][8])
                s41.set(m[4][9])
                s42.set(m[4][10])
                s43.set(m[4][11])
                s44.set(m[4][12])
            #6th
            if yo==6:
                sub_=Entry(frx3,textvariable=s45,font=10,width=10)
                sub_.grid(row=7,column=6)
                pt1_=Entry(frx3,textvariable=s46,font=10,width=10)
                pt1_.grid(row=8,column=6)
                pt2_=Entry(frx3,textvariable=s47,font=10,width=10)
                pt2_.grid(row=9,column=6)
                pt3_=Entry(frx3,textvariable=s48,font=10,width=10)
                pt3_.grid(row=10,column=6)
                pb1_=Entry(frx3,textvariable=s49,font=10,width=10)
                pb1_.grid(row=11,column=6)
                cb_=Entry(frx3,textvariable=s50,font=10,width=10)
                cb_.grid(row=12,column=6)
                t_=Entry(frx3,textvariable=s51,font=10,width=10)
                t_.grid(row=13,column=6)
                p_=Entry(frx3,textvariable=s52,font=10,width=10)
                p_.grid(row=14,column=6)
                s45.set(m[5][5])
                s46.set(m[5][6])
                s47.set(m[5][7])
                s48.set(m[5][8])
                s49.set(m[5][9])
                s50.set(m[5][10])
                s51.set(m[5][11])
                s52.set(m[5][12])
            Button(frx1,text="DONE",command=lambda:edit3(ad,ro,n,c,s)).grid(row=2,column=3,padx=20)
        except Exception as e:
            print(e)
            messagebox.showinfo("edit","no result found")
    s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40,s41,s42,s43,s44,s45,s46,s47,s48,s49,s50,s51,s52=StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar()
    top=Toplevel()
    center_window(730, 470)
    top.lift(window)
    top.title('EDIT ENTRIES')
    frx1=Frame(top)
    frx1.pack(side=TOP)
    frx3=LabelFrame(top)
    frx3.pack(side=BOTTOM,pady=10)
    Label(frx1,text="EDIT ENTRIES",font=("Arial bold",15)).grid(row=0,column=1)
    Label(frx1,text="ADMISSION NO",font=("Arial bold",10)).grid(row=2,pady=5,sticky=W)
    ad=Entry(frx1,font=10,width=15)
    ad.grid(row=2,column=1)
    Button(frx1,text="search",command=edit1).grid(row=2,column=2)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(top,text="<--BACK",bg='red',command=close_second).place(x=5,y=5)
def clear1(ad):
    global mydb,cursor
    try:
        query="delete from report_card where adm_no='"+ad.get()+"'"
        cursor.execute(query)
        mydb.commit()
        messagebox.showinfo('Deleted','Record Deleted Successfully!')
    except:
        messagebox.showinfo('Delete','###NOT FOUND###')

def clear():
    global top
    top=Toplevel()
    center_window(400, 360)
    top.lift(window)
    top.title('DELETE A RECORD')
    Label(top,text="DELETE A STUDENT DETAILS",font=("Arial bold",15)).grid(row=0,column=1)
    Label(top,text="ADMISSION NO",font=("Arial bold",10)).grid(row=2,pady=5,sticky=W)
    ad=Entry(top,font=10,width=15)
    ad.grid(row=2,column=1)
    Button(top,text="delete",font=("Arial bold",10),command=lambda:clear1(ad)).place(x=150,y=200)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(top,text="<--BACK",bg='red',command=close_second).place(x=100,y=300)

def report():
    def delete1():
        t.delete(1.0,'end')
    
    def ch():
        print(t.index(INSERT))

    def save():
        fil=filedialog.asksaveasfilename(defaultextension=".pdf")
        f1=open("stru.txt","w+")
        f1.write(t.get(1.0,"end"))
        pdf = FPDF()
        pdf.add_page() 
        pdf.set_font("Arial", size = 15)
        f1.seek(0)
        for x in f1:
            pdf.cell(200, 10, txt = x, ln = 1)
        pdf.output(fil)
        f1.close()

    def open_():
        pass
        '''t.delete(1.0,'end')
        open_file=filedialog.askopenfilename(title="Open a PDF File",filetypes=(("PDF Files","*.pdf"),("All Files","*.*")))
        if open_file:
            Pdf_file=PdfFileReader(open_file)
            page=Pdf_file.getPage(0)
            p=page.extractText()
            t.insert('end',p)'''

    def report1():
        global im,mydb,cursor
        t.delete(1.0,'end')
        try:
            im=PhotoImage(file="logo.png")
            t.image_create(1.0,image=im)
            f=open("sa.txt",'r')
            for i in f:
                t.insert('end',i)
            f.close()
            query="select * from report_card where adm_no='"+ad.get()+"' "
            cursor.execute(query)
            d=cursor.fetchall()
            c=16.0
            for i in d:
                t.insert(c,'|        %s        |   %d   |   %d   |   %d   |   %d   |     %d     |     %d     |       %d       |'%(i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12]))
                c+=1.0
            mydb.commit()
            t.insert(6.14,i[0])
            t.insert(6.64,i[1])
            t.insert(8.72,i[2])
            t.insert(12.18,i[3])
            t.insert(12.23,i[4])
            f1=open("re.txt",'r')
            for k in f1:
                t.insert('end',k)
            f1.close()
            t.insert(23.9,i[2])
        except Exception as e:
            print(e)
            messagebox.showerror("report card","Admission no not found")
        
    def print_():pass
        #print(win32print.GetDefaultPrinter())
        #win32api.ShellExecute(0,"print","khari.pdf",None,".",0)
    global top
    s1=StringVar()
    top=Toplevel()
    center_window(700,650)
    top.lift(window)
    top.title('GENERATE REPORT CARD')
    Label(top,text="GENERATE REPORT CARD",font=("Arial bold",15)).pack(pady=5)
    f=Frame(top)
    f.pack(side=TOP)
    Label(f,text="ADMISSION NO",font=("Arial bold",10)).grid(row=1,column=1,pady=5,sticky=W)
    ad=Entry(f,font=10,width=15,textvariable=s1)
    ad.grid(row=1,column=2)
    f2=Frame(top)
    f2.pack(padx=5,pady=5)
    scr=Scrollbar(f2)
    scr.pack(side=RIGHT,fill=Y)
    t=Text(f2,width=86,height=33,font=("Arial bold",10),yscrollcommand=scr.set,undo=True)
    t.pack()
    scr.config(command=t.yview)
    f1=Frame(top)
    f1.pack()
    Button(f1,text="generate",font=("Arial bold",10),command=report1,relief=RIDGE).grid(row=1)
    Button(f1,text="clear",font=("Arial bold",10),command=delete1,relief=RIDGE).grid(row=1,column=1,padx=20)
    Button(f1,text="save",font=("Arial bold",10),command=save,relief=RIDGE).grid(row=1,column=2)
    Button(f1,text="print",font=("Arial bold",10),command=print_,relief=RIDGE).grid(row=1,column=3,padx=20)
    Button(f1,text="open",font=("Arial bold",10),command=open_,relief=RIDGE).grid(row=1,column=4)
    Button(f1,text="ch",font=("Arial bold",10),command=ch,relief=RIDGE).grid(row=1,column=5,padx=20)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(top,text="<--BACK",bg='red',command=close_second).place(x=5,y=5)
def delete():
    global mydb,cursor
    response = messagebox.askquestion('Delete?','Are You Sure to Delete ?')
    if response=='yes':
        query="delete from report_card"
        cursor.execute(query)
        mydb.commit()
        messagebox.showinfo('Deleted','Record Deleted Successfully!')
def search():
    global top,mydb,cursor,tp,b
    top=Toplevel()
    center_window(950,500)
    top.lift(window)
    top.title('SEARCH ENTERIES')
    e=Entry(top,font=10,width=15)
    e.pack()
    style=ttk.Style()
    style.theme_use("default")
    scro=Scrollbar(top)
    scro.pack(side=RIGHT,fill=Y)
    tp=ttk.Treeview(top,columns=(1,2,3,4,5,6,7,8,9,10,11,12,13),show="headings",height="15",yscrollcommand=scro.set)
    tp.pack(padx=10,pady=30)
    scro.config(command=tp.yview)
    tp.column(1,width=100)
    tp.column(2,width=60)
    tp.column(3,width=70)
    tp.column(4,width=60)
    tp.column(5,width=70)
    tp.column(6,width=90)
    tp.column(7,width=50)
    tp.column(8,width=50)
    tp.column(9,width=50)
    tp.column(10,width=50)
    tp.column(11,width=50)
    tp.column(12,width=50)
    tp.column(13,width=50)
    tp.heading(1,text="ADMISSION NO")
    tp.heading(2,text="ROLL NO")
    tp.heading(3,text="NAME")
    tp.heading(4,text="CLASS")
    tp.heading(5,text="SEC")
    tp.heading(6,text="SUBJECT")
    tp.heading(7,text="PT1")
    tp.heading(8,text="PT2")
    tp.heading(9,text="PT3")
    tp.heading(10,text="PB1")
    tp.heading(11,text="CB")
    tp.heading(12,text="TOTAL")
    tp.heading(13,text="PER")
    b=Button(top,text="SEARCH",font=("Arial bold",10),command=lambda:find(e))
    b.place(x=200,y=10)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(top,text="<--BACK",bg='red',command=close_second).pack()
    Button(top,text="CLEAR",command=forget).place(x=300,y=10)
def about():
    aboutmessage=''' Author : Lovish khari
E-Mail : lovishkhari6411@gmail.com'''               
    messagebox.showinfo('...::::About US',aboutmessage)
def show():
    global top,mydb,cursor
    top=Toplevel()
    center_window(900,620)
    top.lift(window)
    top.title('STUDENT ENTERIES')
    style=ttk.Style()
    style.theme_use("default")
    frm=LabelFrame(top)
    frm.pack(side=TOP)
    scro=Scrollbar(frm)
    scro.pack(side=RIGHT,fill=Y)
    tv=ttk.Treeview(frm,columns=(1,2,3,4,5,6,7,8,9,10,11,12,13),show="headings",height="25",yscrollcommand=scro.set)
    tv.pack()
    scro.config(command=tv.yview)
    tv.column(1,width=100)
    tv.column(2,width=60)
    tv.column(3,width=70)
    tv.column(4,width=60)
    tv.column(5,width=70)
    tv.column(6,width=90)
    tv.column(7,width=50)
    tv.column(8,width=50)
    tv.column(9,width=50)
    tv.column(10,width=50)
    tv.column(11,width=50)
    tv.column(12,width=50)
    tv.column(13,width=50)
    tv.heading(1,text="ADMISSION NO")
    tv.heading(2,text="ROLL NO")
    tv.heading(3,text="NAME")
    tv.heading(4,text="CLASS")
    tv.heading(5,text="SEC")
    tv.heading(6,text="SUBJECT")
    tv.heading(7,text="PT1")
    tv.heading(8,text="PT2")
    tv.heading(9,text="PT3")
    tv.heading(10,text="PB1")
    tv.heading(11,text="CB")
    tv.heading(12,text="TOTAL")
    tv.heading(13,text="PER")
    cursor.execute("select * from report_card")
    rows=cursor.fetchall()
    total=cursor.rowcount
    Label(frm,text="total enteries are "+ str(total) +"").pack(pady=10)
    for i in rows:
        tv.insert('','end',values=i)
    window.withdraw()
    top.protocol("WM_DELETE_WINDOW",window.destroy)
    Button(frm,text="<--BACK",bg='red',command=close_second).pack(pady=10)
#mydb=mysql.connector.connect(user='root',password='your password',host='localhost',database='mysqlpython')
#cursor=mydb.cursor()
fr1=Frame(window)
fr1.pack(side=LEFT)
im1=Image.open("sps.png")
r=im1.resize((445,430),Image.LANCZOS)
im2=ImageTk.PhotoImage(r)
l1=Label(fr1,image=im2)
l1.pack()
fr=Frame(window)
fr.pack(side=RIGHT)
Button(fr,text="ADD NEW STUDENT",command=add,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="EDIT STUDENT",command=edit,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="DELETE A STUDENT",command=clear,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="IMPORT DATA FROM EXCEL",command=import_,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="SHOW ALL STUDENTS",command=show,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="SEARCH STUDENT",command=search,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="GENERATE REPORT CARD",command=report,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="DELETE ALL RECORDS",command=delete,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
Button(fr,text="ABOUT US",command=about,width=25,font=("Arial bold",10),bd=5,bg='yellow',relief=RIDGE).pack(pady=8,padx=10)
window.mainloop()